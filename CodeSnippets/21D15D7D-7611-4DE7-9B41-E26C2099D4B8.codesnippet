<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string></string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>//: A UIKit based Playground for presenting user interface
  
import UIKit
import PlaygroundSupport

protocol ViewCodeProtocol: class {
    
    func buidViewHierarchy()
    func setupConstraints()
    func setupComplementaryConfiguration()
    
    func callViewCodeMethodsInPresetOrder()
}

extension ViewCodeProtocol {
    
    func callViewCodeMethodsInPresetOrder() {
        buidViewHierarchy()
        setupConstraints()
        setupComplementaryConfiguration()
    }
    
}

class ViewController: UIViewController {
    
    // MARK: - Properties
    private(set) lazy var label: UILabel = {
        let label = UILabel()
        label.textAlignment = .center
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()
    
    var labelText: String
    var labelTextColor: UIColor
    var labelBackgroundColor: UIColor
    
    // MARK: - Initializers
    init(labelText: String = "Hello, World!",
         labelTextColor: UIColor = .white,
         labelBackgroundColor: UIColor = .systemBlue) {
        
        self.labelText = labelText
        self.labelTextColor = labelTextColor
        self.labelBackgroundColor = labelBackgroundColor
        
        super.init(nibName: nil, bundle: nil)
        
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    // MARK: - Lifecycle Methods
    override func loadView() {
        callViewCodeMethodsInPresetOrder()
    }
}

// MARK: - Extension ViewCodeProtocol
extension ViewController: ViewCodeProtocol {
    
    func buidViewHierarchy() {
        
        let view = UIView()
        view.backgroundColor = .white
        
        view.addSubview(label)
        
        self.view = view
    }
    
    func setupConstraints() {
        
        NSLayoutConstraint.activate([
            // Size
            label.widthAnchor.constraint(equalToConstant: 44 * 3),
            label.heightAnchor.constraint(equalToConstant: 44),
            // Position
            label.centerXAnchor.constraint(equalTo: self.view.centerXAnchor),
            label.centerYAnchor.constraint(equalTo: self.view.centerYAnchor)
        ])
        
    }
    
    func setupComplementaryConfiguration() {
        
        label.text = labelText
        label.textColor = labelTextColor
        label.backgroundColor = labelBackgroundColor
        label.layer.cornerRadius = 4
        label.layer.masksToBounds = true
        
    }
  
}

// Present the view controller in the Live View window
PlaygroundPage.current.liveView = ViewController()</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>21D15D7D-7611-4DE7-9B41-E26C2099D4B8</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>ViewCodePlayground</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>0</integer>
</dict>
</plist>
